<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="web.com.spring.login.mapper.LoginMapper">
	<!-- 가입하기o.k -->
	<insert id="join">
		insert into p_user
			(userid,userpw,username,userphone,useremail,useraddr1,useraddr2,useraddr3,userdate,userupdate)
		values
			(#{userId},#{userPw},#{userName},#{userPhone},#{userEmail},#{userAddr1},#{userAddr2},#{userAddr3},now(),null)
	</insert>
	<!-- 로그인o.k -->
	<select id="loginproc" parameterType="LoginVO" resultType="LoginVO">
		select * from 
			p_user
		where 
			userid = #{userId} 
<!-- 				and  -->
<!-- 			userpw = #{userpw}		 -->
	</select>
	<!-- 아이디중복체크o.k -->
	<select id="IdCheck" parameterType="String" resultType="int">
		select count(*) from p_user where userid = #{userId}
	</select>
	<!-- 회원목록o.k -->
	<select id="memberlist" resultType="LoginVO">
		select * from p_user
	</select>
	<!-- 회원수정 -->
	<update id="memberUpdate" parameterType="int">
		update 
			p_user
		set
			userid = #{userId},
			username = #{userName},
			useremail = #{userEmail},
			userphone = #{userPhone},
			useraddr1 = #{userAddr1},
			useraddr2 = #{userAddr2},
			useraddr3 = #{userAddr3},
			userupdate = now()
		where
			userid = #{userId}		 
	</update>
	<!--  회원삭제 -->
	<delete id="memberDelete" parameterType="String">
		delete from p_user where userid = #{userId}
	</delete>
	<!-- 아이디 찾기 -->
	<select id="searchId" resultType="LoginVO">
		select 
			userid 
		from 
			p_user 
		where 
			username = #{userName} and userphone = #{userPhone}
	</select>
	<!-- 비밀번호 찾기 -->
	<select id="searchPw" resultType="LoginVO">
		select 
			userpw 
		from 
			p_user 
		where 
			userid = #{userId}
	</select>
	<!-- 시큐리티 권한로그인 미작동.. -->
	<select id="getuser" resultType="LoginVO">
		select 
		     u.userid,
			 u.userpw,
			 u.username,
			 u.userphone,
			 u.useremail,
			 u.useraddr1,
			 u.useraddr2,
			 u.useraddr3,
			 u.userDate,
			 u.userupDate,
			 r.roleid as userlevel,
			 r.rolename
		from 
     		p_user u 
     	INNER JOIN 
     	    p_role r 
     	ON  
     		u.userlevel = r.roleid
		WHERE 
   			u.userid = #{userId};
	</select>
</mapper>